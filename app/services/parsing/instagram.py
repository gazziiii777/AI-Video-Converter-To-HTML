from playwright.async_api import async_playwright
from core.config import settings
import os
import json


class Instagram:
    def __init__(self):
        self.proxy_settings = self._parse_proxy(settings.PROXY)
        self.login = settings.INSTAGRAM_LOGIN
        self.password = settings.INSTAGRAM_PASSWORD
        self.cookies_file = f"ig.json"

    def _parse_proxy(self, proxy_str):
        """–ü–∞—Ä—Å–∏–º —Å—Ç—Ä–æ–∫—É –ø—Ä–æ–∫—Å–∏ –Ω–∞ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∏–µ"""
        proxy_parts = proxy_str.split('://')[1].split('@')
        auth_part = proxy_parts[0].split(':')
        server_part = proxy_parts[1]

        return {
            'server': server_part,
            'username': auth_part[0],
            'password': auth_part[1]
        }

    async def _load_cookies(self, context):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫—É–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ —Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º —Ñ–æ—Ä–º–∞—Ç–∞"""
        if not os.path.exists(self.cookies_file):
            return False

        with open(self.cookies_file, 'r') as f:
            cookies = json.load(f)

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫—É–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç, –ø–æ–Ω—è—Ç–Ω—ã–π Playwright
        playwright_cookies = []
        for cookie in cookies:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª–µ sameSite
            same_site = cookie.get('sameSite')
            if same_site == 'no_restriction':
                same_site = 'None'
            elif same_site not in ['Strict', 'Lax', 'None']:
                same_site = 'Lax'  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

            # –°–æ–∑–¥–∞–µ–º cookie –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
            playwright_cookie = {
                'name': cookie['name'],
                'value': cookie['value'],
                'domain': cookie.get('domain', '.instagram.com'),
                'path': cookie.get('path', '/'),
                'expires': cookie.get('expirationDate') or cookie.get('expires'),
                'httpOnly': cookie.get('httpOnly', False),
                'secure': cookie.get('secure', True),
                'sameSite': same_site
            }

            # –£–¥–∞–ª—è–µ–º None-–∑–Ω–∞—á–µ–Ω–∏—è
            playwright_cookie = {
                k: v for k, v in playwright_cookie.items() if v is not None}
            playwright_cookies.append(playwright_cookie)

        if not playwright_cookies:
            return False

        await context.add_cookies(playwright_cookies)
        print(f"‚úÖ –ö—É–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ {self.cookies_file}")
        return True

    async def _is_logged_in(self, page):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤—ã–ø–æ–ª–Ω–µ–Ω –ª–∏ –≤—Ö–æ–¥ –ø–æ –Ω–∞–ª–∏—á–∏—é —Å—Å—ã–ª–∫–∏ —Å –ª–æ–≥–∏–Ω–æ–º"""
        try:
            selector = f'a[href="/{self.login}/"]'
            await page.wait_for_selector(selector, timeout=5000)
            return True
        except:
            return False

    async def open_and_auth(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç Instagram —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏ –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"""
        async with async_playwright() as p:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Å –ø—Ä–æ–∫—Å–∏
            browser = await p.chromium.launch(
                headless=False,
                proxy={
                    'server': f"http://{self.proxy_settings['server']}",
                    'username': self.proxy_settings['username'],
                    'password': self.proxy_settings['password']
                }
            )

            # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            context = await browser.new_context(
                user_agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
                viewport={'width': 1280, 'height': 720},
                java_script_enabled=True,
                bypass_csp=True
            )

            # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—É–∫–∏
            cookies_loaded = await self._load_cookies(context)

            page = await context.new_page()

            try:
                # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ Instagram
                print("üîÑ –û—Ç–∫—Ä—ã–≤–∞–µ–º Instagram —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏...")
                await page.goto('https://www.instagram.com/', timeout=60000)

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
                await page.reload()
                print("üîÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
                title = await page.title()
                if "instagram" not in title.lower():
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å Instagram")
                    return

                print("‚úÖ Instagram —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
                print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {title}")

                # –ï—Å–ª–∏ –∫—É–∫–∏ –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
                if cookies_loaded and await self._is_logged_in(page):
                    print("‚úÖ –£–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∫—É–∫–∏)")
                # –û—Å—Ç–∞–≤–ª—è–µ–º –±—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç—ã–º
                print("üöÄ –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º...")
                while True:
                    # –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ
                    await page.wait_for_timeout(3600000)

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
                # –û—Å—Ç–∞–≤–ª—è–µ–º –±—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
                print("üöÄ –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É...")
                while True:
                    await page.wait_for_timeout(3600000)


async def main():
    instagram = Instagram()
    await instagram.open_and_auth()


if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
